@page "/"
@using AnimeCalendar.Services
@using AnimeCalendar.Data
@inject AnimeService _animeService;

<div class="mb-4 bg-dark rounded-3">
    <div id="carouselExampleControls" class="carousel slide" data-bs-ride="carousel" style="height: 200px">
        <div class="carousel-indicators">
            <button type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide-to="0" class="active" aria-current="true" aria-label="Slide 1"></button>
            <button type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide-to="1" aria-label="Slide 2"></button>
            <button type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide-to="2" aria-label="Slide 3"></button>
        </div>
        <div class="carousel-inner" style="height: 200px">
            @foreach (var anime in _animes.Take(3).Select((a, i) => (a, i)))
            {
                <div class="carousel-item @(anime.i == 0 ? "active" : "")">
                    <img src="@anime.a.Banner" class="d-block w-100 carrousel-img" alt="@anime.a.Name">
                </div>
            }
        </div>
        <button class="carousel-control-prev" type="button" data-bs-target="#carouselExampleControls" data-bs-slide="prev">
            <span class="carousel-control-prev-icon" aria-hidden="true"></span>
            <span class="visually-hidden">Previous</span>
        </button>
        <button class="carousel-control-next" type="button" data-bs-target="#carouselExampleControls" data-bs-slide="next">
            <span class="carousel-control-next-icon" aria-hidden="true"></span>
            <span class="visually-hidden">Next</span>
        </button>
    </div>
    <div class="container-fluid p-4">
        <h1 class="display-5 fw-bold">Simulcast calendar</h1>
        <p class="">Find here the release date of your favorites series.</p>
        <a class="btn btn-primary btn-lg" type="button" href="/animes">Explore the collection</a>
    </div>
</div>

<div>
    <h1 class="display-5 fw-bold">Today's shows</h1>
    <AnimeGrid Animes="TodaysShows()"></AnimeGrid>
</div>


@code {

    private List<Anime> _animes = null!;

    protected override void OnInitialized()
    {
        _animes = _animeService.GetAll();
    }

    private IEnumerable<Anime> TodaysShows()
    {
        return _animes
            .Select(a => (a, a.GetNext()))
            .Where(a => DateTime.Now > a.Item2 && DateTime.Now < a.Item2.AddDays(1))
            .Select(a => a.a);
    }
}